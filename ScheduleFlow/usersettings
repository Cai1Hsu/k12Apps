
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>数字校园</title>
    <link rel="shortcut icon" href="https://static.k12top.com/Common/yunmalogo_new.png" />

    <link href="/Plugin/layui/css/layui.css" rel="stylesheet" />
    <link href="/Css/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />

    <link href="/Css/globalstyle.css" rel="stylesheet" />
    <link href="/Css/style.css" rel="stylesheet" />
    <link href="/Css/iconfont.css" rel="stylesheet" />
    <link href="/font/iconfont.css" rel="stylesheet" />
    <script src="/Scripts/echarts.min.js"></script>
    <link href="/Plugin/jquery.autocompleter/jquery.autocomplete.css" rel="stylesheet" />
    <link href="/Css/toggle.css" rel="stylesheet" />

    <script src="/Scripts/localforage.min.js"></script>
    <style>
        .nav-text {
            margin-left: 10px;
        }

        .layui-nav .layui-this:after, .layui-nav-bar, .layui-nav-tree .layui-nav-itemed:after {
            background-color: #15A0ED !important
        }

        .layui-nav-tree .layui-nav-item a {
            line-height: 35px;
        }

        .layui-nav-tree .layui-nav-child a {
            line-height: 40px;
        }

        .layui-nav .layui-nav-child dd:hover ul {
            display: block;
            position: absolute;
            top: 0;
            right: 95px;
            background-color: #FFF;
            box-shadow: 0 2px 4px rgba(0,0,0,.12);
            border: 1px solid #d2d2d2 !important;
            border-radius: 2px;
        }

        .layui-nav .layui-nav-child dd ul {
            display: none;
            padding: 0
        }

            .layui-nav .layui-nav-child dd ul a:hover {
                background: #F0F0F0;
            }

        .bg_hover {
            background-color: #F0F0F0
        }

        .bg_this {
            color: #15A0ED !important;
            background-color: #f2f2f2 !important;
        }

        .layui-layout-admin .layui-side.pull-top, .layui-layout-admin .layui-body.pull-top, .toggleMenu.pull-top {
            top: 0px !important;
        }

        .up-head {
            width: 100%;
            height: 60px;
            background: #ffffff;
            -moz-box-shadow: 0 2px 5px -1px #ddd;
            box-shadow: 0 2px 5px -1px #ddd;
        }

            .up-head .up-head-left {
                margin-left: 30px;
            }

                .up-head .up-head-left li {
                    list-style: none;
                    float: left;
                }

            .up-head > ul {
                margin: 0;
                padding: 0;
            }

            .up-head ul > li.top {
                height: 60px;
                line-height: 60px;
            }

            .up-head .logo-img {
                height: 45px;
                width: 158px;
                margin-top: -7px;
                cursor: pointer;
            }

        .up-head-right > li {
            font-size: 12px;
            float: right;
            list-style: none;
            margin-right: 30px;
            cursor: pointer;
        }

        .right-out {
            position: absolute;
            top: 60px;
            right: 8px;
            background: #ffffff;
            -moz-box-shadow: -2px 0px 5px 0px #ddd;
            box-shadow: -2px 0px 5px 0px #ddd;
            list-style: none;
            margin: 0;
            padding: 0;
            font-size: 14px;
            width: 80px;
        }

            .right-out div {
                width: 100%;
                height: 40px;
                line-height: 40px;
                text-align: center;
                display: none;
            }

                .right-out div:hover {
                    background: #4bb2ff;
                    cursor: pointer;
                    color: #fff;
                }

        .right-out-icon:hover .right-out div {
            width: 100%;
            height: 40px;
            line-height: 40px;
            text-align: center;
            display: block;
        }

        #rolesPanel {
            display: none;
            position: absolute;
            top: 0px;
            right: 80px;
            background-color: rgb(255, 255, 255);
            box-shadow: rgba(0, 0, 0, 0.12) 0px 2px 4px;
            border-radius: 2px;
            width: 100%;
            border: 1px solid #d2d2d2 !important;
        }

            #rolesPanel .roleItem_li {
                display: block;
                text-align: center;
                width: 100%;
            }

                #rolesPanel .roleItem_li a {
                    display: block;
                    text-align: center;
                    width: 100%;
                }

        #roleInfoPanel:hover > a {
            color: #fff
        }

        #roleInfoPanel:hover #rolesPanel {
            display: block
        }

        #logo_Res {
            color: #c13643;
        }

        .up-head-img {
            height: 30px;
            width: 30px;
            margin-top: -1px;
        }

        .layui-layout-admin .layui-logo {
            color: #14a0ec !important;
            line-height: 60px !important;
            font-weight: 800 !important;
            left: 10px;
        }

        .username {
            height: 30px;
            line-height: 50px;
            color: #1890ff;
        }

        .userserilno {
            /*        width: 80px;*/
            height: 30px;
            line-height: 25px;
            font-size: 12px;
            color: #ccc;
            overflow-x: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            text-align: right;
        }

        .ym_logo {
            height: 50px;
            float: left;
            line-height: 60px;
            margin-top: 5px;
            margin-left: 20px;
        }

        .logo-text {
            text-align: left;
            line-height: 60px;
            font-size: 20px;
            color: #14a0ec;
            font-weight: 800;
            cursor: pointer;
            margin-left: 80px;
        }

        .layui-nav-img {
            width: 40px;
            height: 40px;
            margin-right: 20px;
        }

        .layui-layout-right {
            margin-right: 20px !important;
        }
    </style>
</head>
<body class="layui-layout-body" style="background:#f2f2f2;">
    <div class="layui-layout layui-layout-admin">
        <div class="layui-header up-head">
            <ul class="up-head-left">
                <li class="top">
                    <a id="btnHost" style="cursor: pointer">
                        <div class="layui-logo" style="background:url('https://static.k12top.com/Common/yunmalogo_new.png') no-repeat 8px center / 42px 45px">
                            <label style="cursor:pointer;font-size:20px;color:#14a0ec">数字校园</label>
                        </div>
                    </a>
                </li>
            </ul>

            

            <!-- 头部区域（可配合layui已有的水平导航）-->
            <ul class="layui-nav layui-layout-right">
                <li style="float:left;line-height:60px;margin-right:20px;">
                    <a href="javascript:;">
                        <img src="/imgs/funcImg.png" class="layui-nav-img funcImg" id="funcView">
                    </a>
                </li>
                <li class="layui-nav-item">
                    <a href="javascript:;">
                        <div style="float:left;"><img src="http://t.cn/RCzsdCq" class="layui-nav-img" id="imgAvatar"></div>
                        <div style="float:left;">
                            <div class="username" id="lblUserName"></div>
                            <div class="userserilno" id="serialNo">——</div>
                        </div>
                    </a>
                    <dl class="layui-nav-child"> 
                        <dd><a href="javaScript:" id="exit">退出</a></dd>
                    </dl>
                </li>
            </ul>

        </div>

        <div class="layui-side layui-bg-black">
            <div class="layui-side-scroll">
                <!-- 左侧导航区域（可配合layui已有的垂直导航） -->
                <div id="flowName" style="height:42px;width:200px;color:#ffffff;background-color:#15A0ED;display:none;font-size:12px;text-align:center;line-height:16px;padding-top:12px;">
                    <div class="grade"></div>
                    <div class="semester"></div>
                </div>
                <ul class="layui-nav layui-nav-tree" lay-filter="navFilter" style="text-align:left !important" id="menuTree"></ul>
            </div>
        </div>
        <!-- 左侧菜单显隐按钮 -->
        <div class="toggleMenu">
            <span class="close">
                <i class="layui-icon layui-icon-left"></i>
            </span>
            <span class="open" style="display:none">
                <i class="layui-icon layui-icon-right"></i>
            </span>
        </div>

        <div class="layui-body">
            <!-- 内容主体区域 -->
            <div style="padding: 0 10px;min-width:800px;">
                
<style type="text/css">
    .moduleList, .pageList {
        height: 400px;
        width: 400px;
        margin: 0 20px;
        display: inline-block;
        border: 1px solid #999999;
        overflow-y: scroll
    }

    .module-item, .page-item {
        display: block;
        height: 30px;
        line-height: 30px;
        padding-left: 20px;
        cursor: pointer
    }

        .module-item:hover, .page-item:hover {
            background-color: #f2f2f2
        }

    .select {
        background-color: #f2f2f2
    }

    .layui-input, .layui-select, .layui-textarea {
        height: 30px;
    }
</style>

<div class="layui-form">
    <div class="layui-elem-quote-left">
        <span class="layui-breadcrumb">
            <span>用户设置</span>
            
        </span>
    </div>
    <div class="content-area">
        <div id="">
            <div class="btn-area" id="UserRoleIndexContent" style="display:inline">
                <button class="layui-btn layui-btn-sm  layui-btn-normal" data-table="userTable" data-title="新增" data-offset="auto" data-area="600px,520px" data-modal data-url="/ScheduleFlow/UserSettings/Add">
                    新增
                </button>
                <button class="layui-btn layui-btn-sm  layui-btn-normal" data-table="userTable" data-param="ID" data-edit data-title="修改" data-offset="auto" data-area="650px,580px" data-modal data-url="/ScheduleFlow/UserSettings/Edit">
                    修改
                </button>
                <button class="layui-btn layui-btn-sm layui-btn-normal" data-title="导入用户角色" data-modal data-full="false" data-area="800px,480px" data-url='/ScheduleFlow/usersettings/ImportPage'>
                    导入
                </button>
                
                <button class="layui-btn layui-btn-sm layui-btn-normal" data-table="userTable" data-title="导出" data-offset="auto" data-area="600px,228px" data-modal data-url="/ScheduleFlow/UserSettings/Export">
                    导出
                </button>
                <button class="layui-btn layui-btn-sm layui-btn-warn" data-loading="密码重置中，请耐心等待..." data-icon="3" data-title="提示" data-method="post" data-param="ID" data-url="/ScheduleFlow/UserSettings/ResetPassword" data-msg="是否确定重置密码？" data-error="请选择需要重置密码的账户" data-confirm data-table="userTable">
                    重置密码
                </button>
                <button class="layui-btn layui-btn-sm layui-btn-danger" data-loading="数据删除中，请耐心等待..." data-icon="3" data-title="提示" data-method="post" data-param="ID" data-url="/ScheduleFlow/UserSettings/LogicDeleteByIds" data-msg="是否确定删除？" data-error="请选择需要删除的数据" data-confirm data-table="userTable">
                    删除
                </button>
            </div>
            <div style="display:inline;float:right;margin-top:5px;">
                <div style="width:100px;display:inline-block">
                    <select id="QueryOption" name="QueryOption" lay-filter="QueryOption">
                        <option value="0">角色</option>
                        <option value="1" selected>用户</option>
                    </select>
                </div>
                <div id="rolePanel" style="display:inline-block">
                    <select id="RoleOption" name="RoleOption" lay-filter="RoleOption"></select>
                </div>
                <div id="userPanel" style="display:inline-block">
                    <input style="width:250px;display:inline-block;padding-top: 1px;" type="text" id="keyWords" name="keyWords" lay-verify="" placeholder="请输入用户姓名/教工号/学号/手机号查询" autocomplete="off" class="layui-input">
                </div>
                <button class="layui-btn layui-btn-sm layui-btn-normal" id="query" style="margin-top:-0.5px !important">查询</button>
            </div>
        </div>
        <div style="height:40px;line-height:40px;padding-left:10px;background-color:#f2f2f2">
            <span>状态：</span>
            <input type="radio" name="Status" lay-filter="StatusOption" value="0" title="全部" checked>
            <input type="radio" name="Status" lay-filter="StatusOption" title="启用" value="1">
            <input type="radio" name="Status" lay-filter="StatusOption" title="停用" value="2">
        </div>
        <div id="userShow">
            <table id="userTable" class="layui-table" lay-filter="userRoleFliter"></table>
        </div>

    </div>
</div>
<script type="text/html" id="operateBar">
    <a href="#" class="change" name="change" style="color:#4bb2ff;cursor:pointer" lay-event="seeIntro">查看</a>
    <a href="#" class="change" name="change" style="color:#4bb2ff;cursor:pointer" lay-event="change">修改角色</a>
    
    <a href="#" class="change" name="change" style="color:#4bb2ff;cursor:pointer" lay-event="setOrganiseUnit">修改组织机构</a>
</script>


            </div>
        </div>

        <div class="fixbar">
            <div class="bar-item" id="return-top">
                返回顶部
            </div>
            <div class="bar-item" id="go-bottom">
                返回底部
            </div>
        </div>
    </div>
    <script src="/Scripts/jquery-1.10.2.min.js"></script>
    <script src="/Plugin/layui/layui.js"></script>
    <script src="/Scripts/layui.common-1.0.0.js"></script>
    <script src="/Plugin/jquery.autocompleter/jquery.autocompleter.js"></script>
    <script src="/Scripts/jquery.cookie.js"></script>
    <script src="/Scripts/toggle.js"></script>
    <script src="/Scripts/jquery.cookie.js"></script>
    <script>


        //刷新token

        //设置登录权限
        if (this.getQueryStr('access_token') && this.getQueryStr('refresh_token')) {
            $.cookie('access_token', this.getQueryStr('access_token'));
            $.cookie('refresh_token', this.getQueryStr('refresh_token'));
        }

        //获取url请求参数
        function getQueryStr(field) {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0].toLowerCase()] = hash[1];
            }

            if (field) {
                return vars[field.toLowerCase()];
            }

            return vars;
        }

        var rootPath = '/';

        //获取各种配置的地址
        var loginUrl = "";
        var mainPage = "";
        var portalurl = "";
        var defaultAvatar = "";
        $.get("/BasicData/User/GetSettingUrl", {}, function (result) {
            if (result) {
                loginUrl = result.LoginUrl;
                mainPage = result.MainPage;
                portalurl = result.Portalurl;
                defaultAvatar=result.DefaultAvatar
            }
        }, "json");

        //返回到管理首页
        $("#btnHost").click(function () {
            window.location.href = mainPage;//config.mainpage;
        });

        $("#funcView").click(function () {
            window.location.href = portalurl;//config.portalurl;
        });

        $("#exit").click(function () {
            window.location.href = "/Login/LoginOut";
        });

        function post(URL, AppId, WebApi, WebApiLogin, RevertAppId) {
            //returnMain(URL, AppId, WebApiLogin, RevertAppId);
            $.ajax({
                headers: {
                    "appid": AppId,
                    "access_token": JSON.parse($.cookie('token')).access_token,
                    "refresh_token": JSON.parse($.cookie('token')).refresh_token,
                    "targetId": RevertAppId
                },
                type: "post",
                async: false,
                url: WebApi + "/account/SwitchApp",
                data: {},
                dataType: "json",
                success: function (data) {
                    if (data.HasError) {
                        $.ajax({
                            headers: { "refresh_token": refresh_token, "AppId": appId },
                            type: "post",
                            url: WebApi + "/account/RefreshAccessToken",
                            data: null,
                            dataType: "json",
                            success: function (data) {
                                if (data.HasError) {
                                    alert(data.Message);
                                    window.location.href = WebApiLogin;
                                } else {
                                    var token = { access_token: data.Data.access_token, refresh_token: data.Data.refresh_token }
                                    $.cookie('token', JSON.stringify(token));
                                }
                            }
                        });
                    } else {
                        res_access_token = data.Data.access_token;
                        res_refresh_token = data.Data.refresh_token;

                        var temp = document.createElement("form");
                        temp.action = URL;
                        temp.method = "post";
                        temp.style.display = "none";
                        var access_token = document.createElement("textarea");
                        var refresh_token = document.createElement("textarea");
                        var appList = document.createElement("textarea");
                        var user = document.createElement("textarea");
                        access_token.name = "access_token";
                        access_token.value = res_access_token;
                        refresh_token.name = "refresh_token";
                        refresh_token.value = res_refresh_token;
                        appList.name = "appList";
                        appList.value = "";
                        user.name = "user";
                        user.value = "";

                        temp.appendChild(access_token);
                        temp.appendChild(refresh_token);
                        temp.appendChild(appList);
                        temp.appendChild(user);
                        document.body.appendChild(temp);
                        temp.submit(); return temp;
                    }
                }
            })
        }

        //动态显示菜单左上角排课年级
        function showCurrentFLowName() {
            if(window.flowID){
                $.ajax({
                    url: '/ScheduleFlow/ScheduleTaskFlow/GetScheduleTaskFlowDetail',
                    method: 'get',
                    data: {
                        FlowId: window.flowID
                    },
                    success: function (data) {
                        if (!data.HasError) {
                            var grade = data.Data.EduYearName
                            var name = data.Data.SemesterName
                            $('#flowName .grade').text(grade)
                            $('#flowName .semester').text(name)
                            $('#flowName').show()
                        }
                    },
                    error: function () { }
                })
            }
        }
        //加载用户角色列表
        loadCurrentUserRoles();
        function loadCurrentUserRoles() {
            $.getJSON('/Login/LoadUserRoles', {}, function (roles) {
                $('#currentRole').html();
                $('#rolesPanel').empty();
                $('#currentRole').attr('data-rId', '');
                var _rolestext = ``;
                $(roles).each(function (index, role) {
                    if (role.IsSelected) {
                        if (roles.length > 1) {
                            $('#currentRole').html(`切换角色`);
                            $('#currentRole').attr('data-rId', role.RoleId);
                            _rolestext += `<li name="liNav" class="roleItem_li"><a class="bg_this" name="roleItem" style="cursor: pointer;color: #15A0ED !important;" data-rId=${role.RoleId} href="#">${role.RoleName}</a></li>`;
                        } else {
                            //$('#currentRole').html(role.RoleName);
                            //$('#currentRole').attr('data-rId', role.RoleId);
                            $('#roleInfoPanel').remove();
                        }
                    } else {
                        if (roles.length > 1)
                            _rolestext += `<li name="liNav"  class="roleItem_li"><a  name="roleItem" style="cursor: pointer" data-rId=${role.RoleId} href="#">${role.RoleName}</a></li>`;

                    }
                })
                if (_rolestext != '')
                    $('#rolesPanel').append(_rolestext)
                else
                    $('#rolesPanel').remove();
            })
        }
        //角色切换
        $('#rolesPanel').on('click', 'a[name="roleItem"]', function (e) {
            var self = this;
            var _currentRId = $('#currentRole').attr('data-rId');
            var _nRId = $(self).attr('data-rId');
            //if (_nRId== _currentRId)
            //    return
            $.post('/Login/RoleChange', { oldRoleId: _currentRId, nRoleId: _nRId }, function (response) {
                if (response.HasError) {
                    layer.msg(response.Message, { icon: 2 });
                } else {
                    //loadCurrentUserRoles();
                    //window.location.reload();//需要attrbute->无权限->首页||无权限提示页
                    window.location.href = "/Home/Index";
                }
            })
        })
        $('#currentRole').hover(function (e) {
            var _width = parseFloat($(this).width());
            $('#rolesPanel').css({ "right": `${_width + 23}px` })
        })
        $(function () {
            //返回门户
            $('#logo_Res').click(function () {
                window.location.href = '/Login/BackToPortal';
            })
            $('#backToPortal').click(function () {
                window.location.href = '/Login/BackToPortal';
            })

            $("#loginOut").click(function () {
                window.location.href ='/Login/LoginOut';
            });
            $("#CheckSchool").click(function () {
                window.location.href = "/Login/CheckSchool";
            });
            $('#roleInfoPanel').on('click', 'a[name="navItem"]', function (e) {
                $(this).parent().removeClass('layui-this')
            })
            $('#roleInfoPanel').on('click', 'li[name="liNav"]', function (e) {
                $(this).removeClass('layui-this')
            })
            $('#roleInfoPanel').on('mouseenter ', 'li[name="liNav"]', function (e) {
                $(this).addClass('bg_this')//.css("background-color", "#F0F0F0")//background:#F0F0F0
            })
            $('#roleInfoPanel').on('mouseleave ', 'li[name="liNav"]', function (e) {
                $(this).removeClass('bg_this')
            })
            function menuRender() {
                var urlmap = [
                    {
                        src: "/ExamPlan/Exam/Othre",
                        dest: "/ExamPlan/Exam/Index"
                    },
                    {
                        src: "/ExamPlan/Exam/ExamSetting",
                        dest: "/ExamPlan/Exam/Index"
                    }
                ];
                var path = window.location.pathname;
                $(urlmap).each(function () {
                    var src = this.src;
                    var dest = this.dest;
                    if (src == path) {
                        path = dest;
                    }
                });

                var activeNav = null;
                if (path == "/") {
                    activeNav = $(".layui-nav [default-page]");
                } else {
                    var navList = $(".layui-nav a[href]");
                    $(navList).each(function () {
                        var currNav = this;
                        var url = $(currNav).attr("href");
                        if (url.indexOf(path) >= 0) {
                            activeNav = $(currNav);
                        }
                    });
                }
                if (activeNav != null && activeNav != undefined) {
                    activeNav.addClass("layui-this");
                    var pNode = activeNav.parents(".layui-nav-item");
                    if (pNode != null && pNode != undefined) {
                        pNode.addClass("layui-nav-itemed");
                    }
                }
            }
            //获取url请求参数
            function getQueryStr(field) {
                var vars = [], hash;
                var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
                for (var i = 0; i < hashes.length; i++) {
                    hash = hashes[i].split('=');
                    vars.push(hash[0]);
                    vars[hash[0].toLowerCase()] = hash[1];
                }

                if (field) {
                    return vars[field.toLowerCase()];
                }

                return vars;
            }
            //JavaScript代码区域
            layui.use(['element', 'form', 'layer'], function () {
                var element = layui.element;
                var layer = layui.layer;
                //设置菜单项
                var _menuKey = "_menuKey_base";
                var _userMenuKey = "_roleInfo_base";
                var roleInfo = { roleId: -100, indexs: [] }
                var _menuCheck = getCookie("menuCheck");
               
                if (_menuCheck != "") {
                    localforage.removeItem(_userMenuKey).then(function () {

                    }).catch(function (err) {
                        layer.msg(response.Message, { icon: 2 });
                    });
                }
                localforage.getItem(_userMenuKey, function (err, _roleInfo) {
                    if (_roleInfo != null) {
                        roleInfo = _roleInfo;
                    }
                    $.getJSON('/Login/GetCurrentLoginMode', {}, function (loginMode) {
                        if (loginMode == "1" || loginMode == 1) {
                            //系统内部
                            $.post('/Login/CompareRoleItem', { roleId: roleInfo.roleId, indexs: roleInfo.indexs }, function (response) {
                                if (response.HasError) {
                                    layer.msg(response.Message, { icon: 2 });
                                } else {
                                    new Promise(function (resolve, reject) {
                                        __menuStore(response)
                                        resolve();
                                    });
                                }
                            })
                        } else {
                            //sso
                            $.post('/Login/CompareRoleItem4SSOLazy', { roleId: roleInfo.roleId, indexs: roleInfo.indexs, appid: getQueryStr('appid') }, function (response) {
                                if (response.HasError) {
                                    layer.msg(response.Message, { icon: 2 });
                                } else {
                                    new Promise(function (resolve, reject) {
                                        __menuStore(response)
                                        resolve();
                                    });
                                }
                            })
                        }
                    })
                    return;
                });
                function __menuStore(response) {
                    if (response.Data.render) {
                        localforage.removeItem(_menuKey).then(function () {
                            localforage.setItem(_menuKey, response.Data.menus).then(function (value) {
                                localforage.removeItem(_userMenuKey).then(function () {
                                    if (response.Data != null && response.Data.role != null) {
                                        roleInfo.roleId = response.Data.role.roleId;
                                        roleInfo.indexs = [];
                                        $(response.Data.role.Indexs).each(function (index, idx) {
                                            roleInfo.indexs.push(idx)
                                        })
                                        localforage.setItem(_userMenuKey, roleInfo).then(function (value) {
                                            _renderMenu()
                                            //_removeMenuRender();
                                            //
                                        }).catch(function (err) {
                                            layer.msg(res.Message, { icon: 2 });
                                        });

                                    }
                                }).catch(function (err) {
                                    layer.msg(res.Message, { icon: 2 });
                                });

                            }).catch(function (err) {
                                layer.msg(err, { icon: 2 });
                            });
                        }).catch(function (err) {
                            layer.msg(err, { icon: 2 });
                        });
                    } else {
                        _renderMenu()
                    }
                }
                function _removeMenuRender() {
                    $.getJSON('/Login/RemoveMenuCheck', {}, function (res) {
                        if (res.HasError) {
                            layer.msg(res.Message, { icon: 2 });
                        }
                    })
                }
                function _renderMenu() {
                  
                    var _menuStore = localforage.getItem(_menuKey).then(function (value) {
                        if (value == null)
                            return
                        //layer.msg(`未获取到菜单项`, { icon: 2 });
                        $('#menuTree').empty();
                        var _tree = ``;// class="layui-this"
                        $(value).each(function (index, module) {
                            module.IconContent = module.IconContent.substr(1);
                            if (module.IsDisplay) {//layui-nav-itemed
                                _tree += `<li class="layui-nav-item" data-mId=${module.Index}><a style="line-height:35px" href="${module.Href}"><i class="iconfont ${module.IconContent}"></i><span class="nav-text">${module.Title}</span></a>`;

                                if (module.ChildMenus) {
                                    _tree += `<dl class="layui-nav-child" style="background-color:#ffffff !important">`;
                                    $(module.ChildMenus).each(function (index, menu) {
                                        menu.IconContent = menu.IconContent.substr(1);
                                        if (menu.IsDisplay) {
                                            _tree += `<dd><a href="${menu.Href}"><i class="iconfont ${menu.IconContent}"></i><span class="nav-text">${menu.Title}</span></a></dd>`;
                                        }
                                    })
                                    _tree += `</dl>`;
                                }
                                _tree += `</li>`;
                            }
                        })
                        $('#menuTree').append(_tree)
                        menuRender();
                        _removeMenuRender();
                        element.render('nav');
                    }).catch(function (err) {
                        layer.msg(err, { icon: 2 });
                    });
                }
                function getCookie(c_name) {
                    if (document.cookie.length > 0) {
                        c_start = document.cookie.indexOf(c_name + "=")
                        if (c_start != -1) {
                            c_start = c_start + c_name.length + 1
                            c_end = document.cookie.indexOf(";", c_start)
                            if (c_end == -1) c_end = document.cookie.length
                            return unescape(document.cookie.substring(c_start, c_end))
                        }
                    }
                    return ""
                }
                function setCookie(c_name, value, expiredays) {
                    var exdate = new Date()
                    exdate.setDate(exdate.getDate() + expiredays)
                    document.cookie = c_name + "=" + escape(value) +
                        ((expiredays == null) ? "" : ";expires=" + exdate.toGMTString())
                }
                //element.on('nav(navFilter)', function () {
                //    location.hash = 'navFilter=' + this.getAttribute('lay-id');
                //});
                //鼠标悬浮显示帮助说明
                $('.icon_tip').mouseover(function () {
                    var content = $(this).find('.tip_content').html()
                    var index = layer.tips(`<div style="color:#666;max-width:500px;min-width:200px; white-space:normal;word-break:break-all;word-wrap:break-word; ">${content}</div>`, '.icon_tip', {
                        tips: [2,'#EEF8FA'],
                        area:['auto','auto'],
                        time: 0,
                    });
                    $(this).mouseout(function () {
                        layer.close(index)
                    })
                })
                function GetRequest() {
                    var url = parent.location.search; //获取url中"?"符后的字串
                    var theRequest = new Object();
                    if (url.indexOf("?") != -1) {
                        var str = url.substr(1);
                        strs = str.split("&");
                        for (var i = 0; i < strs.length; i++) {
                            theRequest[strs[i].split("=")[0].toLowerCase()] = unescape(strs[i].split("=")[1]);
                        }
                    }
                    return theRequest;
                }
                var params = GetRequest()
                window.flowID = params['scheduletaskflowid'];
                showCurrentFLowName()
                $('#return-top').click(function () {
                    $('.layui-body').animate({ scrollTop: 0 }, 300);
                })
                $('#go-bottom').click(function () {
                    var scrollHeight = document.getElementsByClassName('layui-body')[0].scrollHeight;
                    $('.layui-body').animate({ scrollTop: scrollHeight }, 300);
                })
                $('#map').click(function () {
                    if (!window.flowID) {
                        return layer.alert('请进入排课流页面进行操作');
                    }
                    layer.open({
                        type: 2,
                        maxmin: true,
                        title: '排课地图',
                        area: ['80%', '80%'],
                        content: '/ScheduleFlow/ScheduleTaskFlowMap/Map'
                    })
                })

            });
              $("#updatePassWord").click(function () {
                 layer.open({
                    type: 2,
                    title: "修改密码",
                    content: "/BasicData/User/Update",
                    area: ['455px', '255px'],
                    end: function () {
                    }
                });
            });

        });

        var refresh_token = getCookie("refresh_token");
        var access_token = getCookie("access_token");

        $.ajax({
            type: "GET",
            url: '/BasicData/User/UserInfo',
            dataType: "json",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("access_token", refresh_token);
                xhr.setRequestHeader("refresh_token", access_token);
                xhr.setRequestHeader("Authorization", `Bearer ${access_token}`);
            },
            success: function (result) {
                if (result && result.code === 0) {
                    var data = result.data
                    if (data.avatarUrl && data.avatarUrl != "" && data.avatarUrl != null)
                        $("#imgAvatar").attr("src", data.avatarUrl)
                    else
                        $("#imgAvatar").attr("src", defaultAvatar)
                    $("#lblUserName").html(data.userName + '<svg style="margin-left:2px;" viewBox="64 64 896 896" focusable="false" fill="currentColor" width="0.7em" height="0.7em" data-icon="down" aria-hidden="true"><path d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"></path></svg>');
                    $("#serialNo").html(data.accountName);
                }
            }
        });

        //获取cookie
        function getCookie(cname) { 
            var name = cname + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i].trim();
                if (c.indexOf(name) == 0) return c.substring(name.length, c.length);
            }
            return "";
        }
    </script>
    
    <script type="text/javascript">
        $(function () {
            common.Init("UserRoleIndexContent");
            //$('#userPanel').hide();
            $('#rolePanel').hide();
            layui.use(['form', 'table', 'layer'], function () {
                var table = layui.table;
                var layer = layui.layer;
                var form = layui.form;
                var _curr = 1;
                var _statusCode = 0;
                //状态切换
                form.on('radio(StatusOption)', function (data) {
                    _statusCode = data.value
                    Query();
                });
                //角色与用户 下拉框切换
                form.on('select(QueryOption)', function (data) {
                    if (data.value == 0) {// 角色
                        $('#userPanel').hide();
                        $('#rolePanel').show();
                    } else {//用户
                        $('#userPanel').show();
                        $('#rolePanel').hide();
                    }
                });
                LoadRoles();
                function LoadRoles() {
                    $.getJSON('/ScheduleFlow/usersettings/LoadRoles', {}, function (roles) {
                        $('#RoleOption').empty();
                        $('#RoleOption').append(`<option value="0">请选择</option>`);
                        $(roles).each(function (index, role) {
                            $('#RoleOption').append(`<option value=${role.RoleID}>${role.RoleName}</option>`);
                        })
                        form.render('select')
                    })
                }
                //查询
                var userData = []
                $('#query').click(function (e) {
                    Query();
                })

                //同步数据
                $('#syncData4Cloud').click(function (e) {
                    layui.use(['layer'], function () {
                    var layer = layui.layer;
                    layer.confirm('将要开始数据同步, 是否确定继续？', { icon: 3, title: '提示' }, function (index) {
                        var aindex = layer.msg('数据同步中，请稍后...', {
                            icon: 16
                            , shade: 0.01,
                            time:0
                        });
                        $.getJSON('/ScheduleFlow/UserSettings/SyncData4AccountFromCloud', {}, function (response) {
                            layer.close(aindex);
                            if (response.HasError) {
                                layer.alert(response.Message, { icon: 2 });
                            } else {
                                layer.msg('同步成功', {
                                    icon: 1
                                }, function () {
                                    window.location.reload();
                                });
                            }
                        })
                        layer.close(index);
                    });
                })
            })

                //数据初始化
                //renderTableByKeys(0, 0, "")
                renderTableByKeys(1, 0, "")
                function Query(autoRender = true) {
                    var _option = $('#QueryOption').val();
                    if (_option == 0) {//角色
                        var _roleId = $('#RoleOption').val();
                        if (_roleId == 0) {
                            layer.msg('请选择要查询的角色', {
                                icon: 7,
                                time:1000,
                                end: function () {
                                    //table.render({ elem: '#userTable', data:[] })
                                    //数据初始化
                                    renderTableByKeys(0, 0, "")
                                }
                            });
                            return
                        }
                        if (autoRender) {
                            renderTableByKeys(0, _roleId, "")
                        } else {
                            renderTableByKeysRender(0, _roleId, "")
                        }

                    } else {//用户
                        var _keyWords = $('#keyWords').val().trim();
                        if (autoRender) {
                            renderTableByKeys(1, 0, _keyWords)
                        } else {
                            renderTableByKeysRender(1, 0, _keyWords)
                        }
                    }
                }
                function renderTableByKeys(type,roleId,keyWords) {
                    table.render({
                        elem: '#userTable'
                        , url: '/ScheduleFlow/usersettings/QueryTableListModelPager' //数据接口
                        , where: { type: type, roleId: roleId, keywords: keyWords, Status: _statusCode }
                        , skin: 'nob'
                        , page: true //开启分页
                        , cols: [[ //表头
                              { type: 'checkbox', field: 'ID', fixed: 'left' }
                            , { field: 'AccountSerialNo', title: '编号', edit: false }
                            , { field: 'UserName', title: '姓名', edit: false }
                            , { field: 'No', title: '账号', edit: false }
                            , { field: 'ExpireTypeStr', title: '限期类型', edit: false }
                            , { field: 'ExpireTime', title: '到期时间', edit: false }
                            //, { field: 'UserNamePy', title: '拼音', edit: false }
                            , { field: 'Gender', title: '性别', edit: false }
                            , { field: 'StatusDescription', title: '状态', edit: false }
                            , { field: 'Phone', title: '手机号码', edit: false }
                            , { field: 'RelationUserDescription', title: '关联用户', edit: false }
                            , { field: 'RoleDescription', title: '角色', edit: false }
                            , { field: 'UserID', title: '操作',width:180, toolbar: '#operateBar' }//templet: '<div><a href="#" class="change" name="change" style="color:#4bb2ff;cursor:pointer">修改</a></div>'
                        ]]
                        , request: { pageName: 'PageIndex', limitName: 'PageSize' }
                        , done: function (res, curr, count) {
                            _curr = curr;
                        }
                    })
                }

                function renderTableByKeysRender(type, roleId, keyWords) {
                    table.render({
                        elem: '#userTable'
                        , url: '/ScheduleFlow/usersettings/QueryTableListModelPager' //数据接口
                        , where: { type: type, roleId: roleId, keywords: keyWords, Status: _statusCode }
                        , skin: 'nob'
                        , page: { curr: _curr} //开启分页
                        , cols: [[ //表头
                              { type: 'checkbox', field: 'ID', fixed: 'left' }
                            , { field: 'AccountSerialNo', title: '编号', edit: false }
                            , { field: 'UserName', title: '姓名', edit: false }
                            , { field: 'No', title: '账号', edit: false }
                            //, { field: 'UserNamePy', title: '拼音', edit: false }
                            , { field: 'Gender', title: '性别', edit: false }
                            , { field: 'StatusDescription', title: '状态', edit: false }
                            , { field: 'Phone', title: '手机号码', edit: false }
                            , { field: 'RelationUserDescription', title: '关联用户', edit: false }
                            , { field: 'RoleDescription', title: '角色', edit: false }
                            , { field: '', title: '操作', width: 180,  toolbar: '#operateBar' }
                        ]]
                        , request: { pageName: 'PageIndex', limitName: 'PageSize' }
                        , done: function (res, curr, count) {
                            _curr = curr;
                        }
                    })
                }
                function reloadTable() {
                    Query(false);
                }
                window.reloadTable = reloadTable;
                //监听工具条
                table.on('tool(userRoleFliter)', function (obj) {
                    var data = obj.data;
                    var layEvent = obj.event;
                    if (data == undefined || data == '')
                        return

                    if (layEvent === 'change') {
                        layer.open({
                            title: '选择角色',
                            type: 2,
                            content: '/ScheduleFlow/UserSettings/IdentityChange?AccountId=' + data.ID,
                            area: ['500px', '300px'],
                            cancel: function (index, layero) {
                                //还原相反
                                reloadTable();
                                layer.close(index);
                            },
                        })
                    } else if (layEvent === 'seeIntro') {
                        layer.alert('个人简介: ' + data.Intro);
                    } else if (layEvent == "setter") {
                        layer.open({
                            title: '选择面板',
                            type: 2,
                            content: '/ScheduleFlow/UserSettings/ModularChange?AccountId=' + data.ID,
                            area: ['500px', '300px'],
                            cancel: function (index, layero) {
                                //还原相反
                                reloadTable();
                                layer.close(index);
                            },
                        })
                    }
                    else if (layEvent == "setOrganiseUnit") {
                        layer.open({
                            title: '选择组织机构',
                            type: 2,
                            content: '/ScheduleFlow/UserSettings/SetOrganiseUnit?AccountId=' + data.ID,
                            area: ['400px', '550px'],
                            cancel: function (index, layero) {
                                //还原相反
                                reloadTable();
                                layer.close(index);
                            },
                        })
                    }
                });
                //renderTable(data)
            })
        });
    </script>

</body>
</html>